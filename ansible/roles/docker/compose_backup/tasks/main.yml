---
- name: Tear down {{ stack_name }} Docker Compose stack
  community.docker.docker_compose_v2:
    project_src: "{{ user_home }}/{{ stack_name }}"
    state: absent

- name: Read the {{ stack_name }} compose.yml file
  slurp:
    src: "{{ user_home }}/{{ stack_name }}/compose.yml"
  register: compose_file

- name: Parse the {{ stack_name }} compose.yml file
  set_fact:
    compose_content: "{{ compose_file.content | b64decode | from_yaml }}"

- name: Extract {{ stack_name }} service names
  set_fact:
    service_names: "{{ compose_content.services.keys() | list }}"

# - name: Display volume names (debugging purposes)
#   debug:
#     msg: "{{ service_names }}"

# - name: Print out the appropriate name
#   debug:
#     msg: "{{ stack_name }}_{{ item }}"
#   loop: "{{ service_names }}"

- name: Copy Docker mounted directories for {{ stack_name }} to backup directory
  block:
    - name: Ensure {{ stack_name }} backup directories exist
      file:
        path: "{{ user_home }}/backups/docker/{{ stack_name }}/{{ item }}"
        state: directory
      with_items: "{{ service_names }}"

    - name: Check if {{ stack_name }} mount points exist
      stat:
        path: "{{ user_home }}/backups/docker/{{ stack_name }}/{{ item }}"
      with_items: "{{ service_names }}"
      register: service_exists

    - name: Check if directory exists to backup
      stat:
        path: "{{ user_home }}/{{ stack_name }}/{{ item }}"
      with_items: "{{ service_names }}"
      register: backup_dir_stat

    - name: Copy {{ stack_name }} mounted directories to backup directory
      ansible.builtin.command:
        cmd: "cp -r {{ user_home }}/{{ stack_name }}/{{ item.0 }} {{ user_home }}/backups/docker/{{ stack_name }}/{{ item.0 }}/{{ item.0 }}-backup-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}-{{ ansible_date_time.second }}"
      when:
        - item.1.stat.exists
        - item.2.stat.exists
      with_together:
        - "{{ service_names }}"
        - "{{ service_exists.results }}"
        - "{{ backup_dir_stat.results }}"
        
    # # Debug
    # - name: Display volume existence message when present
    #   debug:
    #     msg: "{{ stack_name }}_{{ item.item }}"
    #   with_items: "{{ service_exists.results }}"
    #   when: item.stat.exists

- name: Deploy {{ stack_name }} Docker Compose stack
  community.docker.docker_compose_v2:
    project_src: "{{ user_home }}/{{ stack_name }}"
    state: present
