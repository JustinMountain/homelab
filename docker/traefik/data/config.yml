http:
 #region routers 
  routers:
    unifi:
      entryPoints:
        - "https"
      rule: "Host(`unifi.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: unifi
    pihole:
      entryPoints:
        - "https"
      rule: "Host(`pihole.igarashimountain.com`)"
      middlewares:
        - default-headers
        - redirectregex-pihole
        - addprefix-pihole
        - https-redirectscheme
      tls: {}
      service: pihole
    stegosaurnas:
      entryPoints:
        - "https"
      rule: "Host(`stegosaurnas.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: stegosaurnas
    pbs:
      entryPoints:
        - "https"
      rule: "Host(`pbs.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: pbs
    truenas:
      entryPoints:
        - "https"
      rule: "Host(`truenas.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: truenas
    torrent:
      entryPoints:
        - "https"
      rule: "Host(`torrent.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: torrent
    sonarr:
      entryPoints:
        - "https"
      rule: "Host(`sonarr.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: sonarr
    radarr:
      entryPoints:
        - "https"
      rule: "Host(`radarr.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: radarr
    Lidarr:
      entryPoints:
        - "https"
      rule: "Host(`Lidarr.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: Lidarr
    readarr:
      entryPoints:
        - "https"
      rule: "Host(`readarr.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: readarr
    prowlarr:
      entryPoints:
        - "https"
      rule: "Host(`prowlarr.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: prowlarr
    flaresolverr:
      entryPoints:
        - "https"
      rule: "Host(`flaresolverr.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: flaresolverr
    bazarr:
      entryPoints:
        - "https"
      rule: "Host(`bazarr.igarashimountain.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: bazarr

#endregion
#region services
  services:
    unifi:
      loadBalancer:
        servers:
          - url: "https://192.168.1.1"
        passHostHeader: true
    pihole:
      loadBalancer:
        servers:
          - url: "http://192.168.1.201"
        passHostHeader: true
    stegosaurnas:
      loadBalancer:
        servers:
          - url: "https://192.168.1.200:8006"
        passHostHeader: true
    pbs:
      loadBalancer:
        servers:
          - url: "https://192.168.1.210:8007"
        passHostHeader: true
    truenas:
      loadBalancer:
        servers:
          - url: "http://192.168.1.211"
        passHostHeader: true
    torrent:
      loadBalancer:
        servers:
          - url: "http://192.168.1.213:8080"
        passHostHeader: true
    sonarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.213:8989"
        passHostHeader: true
    radarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.213:7878"
        passHostHeader: true
    Lidarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.213:8686"
        passHostHeader: true
    readarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.213:8787"
        passHostHeader: true
    prowlarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.213:9696"
        passHostHeader: true
    flaresolverr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.213:8191"
        passHostHeader: true
    bazarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.213:6767"
        passHostHeader: true
#endregion
  middlewares:
    https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true
    default-headers:
      headers:
        frameDeny: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https
    redirectregex-pihole:
      redirectRegex:
        regex: "/admin/(.*)"
        replacement: /
    addprefix-pihole:
      addPrefix:
        prefix: "/admin"

    default-whitelist:
      ipAllowList:
        sourceRange:
        - "10.0.0.0/8"
        - "192.168.0.0/16"
        - "172.16.0.0/12"

    secured:
      chain:
        middlewares:
        - default-whitelist
        - default-headers
